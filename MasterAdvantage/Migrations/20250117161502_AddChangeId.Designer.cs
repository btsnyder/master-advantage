// <auto-generated />
using System;
using MasterAdvantage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterAdvantage.Migrations
{
    [DbContext(typeof(MasterAdvantageContext))]
    [Migration("20250117161502_AddChangeId")]
    partial class AddChangeId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("CreatureWeapon", b =>
                {
                    b.Property<Guid>("CreaturesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WeaponsId")
                        .HasColumnType("TEXT");

                    b.HasKey("CreaturesId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("CreatureWeapon");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Components.Encounter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChangeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Encounters");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Components.EncounterItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ActionsUsed")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Conditions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ConditionsOpen")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CreatureId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentHP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentMana")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentStamina")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("EncounterId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hidden")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Initiative")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatureId");

                    b.HasIndex("EncounterId");

                    b.ToTable("EncounterItems");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Creature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ActionPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Agility")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Attack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Charisma")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Enhancements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Jump")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MDR")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxHP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxMana")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxStamina")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Might")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PDR")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reactions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SaveDC")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senses")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Creatures");

                    b.HasDiscriminator().HasValue("Creature");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Spell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AP")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Concentration")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CreatureId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatureId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.SpellEnhancement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SpellId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellEnhancements");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Trade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Attribute")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Mastery")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DamageType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Melee")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WeaponStyleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WeaponStyleId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.WeaponProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Effects")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WeaponProperties");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.WeaponStyle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WeaponStyles");
                });

            modelBuilder.Entity("WeaponWeaponProperty", b =>
                {
                    b.Property<Guid>("WeaponPropertiesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WeaponsId")
                        .HasColumnType("TEXT");

                    b.HasKey("WeaponPropertiesId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("WeaponWeaponProperty");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Character", b =>
                {
                    b.HasBaseType("MasterAdvantage.Shared.Entities.Creature");

                    b.Property<int>("AcrobaticsMastery")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AgilitySave")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArcanaMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AthleticsMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AwarenessMastery")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CharismaSave")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomKnowledge1Mastery")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomKnowledge1Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomKnowledge2Mastery")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomKnowledge2Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HistoryMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfluenceMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InsightMastery")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IntelligenceSave")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntimidationMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvestigationMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedicineMastery")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MightSave")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NatureMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OccultismMastery")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReligionMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StealthMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SurvivalMastery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrickeryMastery")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Character");
                });

            modelBuilder.Entity("CreatureWeapon", b =>
                {
                    b.HasOne("MasterAdvantage.Shared.Entities.Creature", null)
                        .WithMany()
                        .HasForeignKey("CreaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterAdvantage.Shared.Entities.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Components.EncounterItem", b =>
                {
                    b.HasOne("MasterAdvantage.Shared.Entities.Creature", "Creature")
                        .WithMany()
                        .HasForeignKey("CreatureId");

                    b.HasOne("MasterAdvantage.Shared.Components.Encounter", "Encounter")
                        .WithMany("Items")
                        .HasForeignKey("EncounterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creature");

                    b.Navigation("Encounter");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Spell", b =>
                {
                    b.HasOne("MasterAdvantage.Shared.Entities.Creature", null)
                        .WithMany("Spells")
                        .HasForeignKey("CreatureId");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.SpellEnhancement", b =>
                {
                    b.HasOne("MasterAdvantage.Shared.Entities.Spell", "Spell")
                        .WithMany("Enhancements")
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Trade", b =>
                {
                    b.HasOne("MasterAdvantage.Shared.Entities.Character", "Character")
                        .WithMany("Trades")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Weapon", b =>
                {
                    b.HasOne("MasterAdvantage.Shared.Entities.WeaponStyle", "Style")
                        .WithMany()
                        .HasForeignKey("WeaponStyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Style");
                });

            modelBuilder.Entity("WeaponWeaponProperty", b =>
                {
                    b.HasOne("MasterAdvantage.Shared.Entities.WeaponProperty", null)
                        .WithMany()
                        .HasForeignKey("WeaponPropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterAdvantage.Shared.Entities.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Components.Encounter", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Creature", b =>
                {
                    b.Navigation("Spells");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Spell", b =>
                {
                    b.Navigation("Enhancements");
                });

            modelBuilder.Entity("MasterAdvantage.Shared.Entities.Character", b =>
                {
                    b.Navigation("Trades");
                });
#pragma warning restore 612, 618
        }
    }
}
