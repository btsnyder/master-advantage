<MudCard Style="height: 70vh; width: 80vw"> 
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Secondary" Size="Size.Large">
                <MudImage Src="@("images/" + Item.Creature.ImageSrc)" />
            </MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Item.Creature.Name</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Default" OnClick="() => CardClosed.InvokeAsync()" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent Class="d-flex overflow-scroll gap-4 flex-column">
        <MudTabs ApplyEffectsToContainer="true" MinimumTabWidth="40px">
            <MudTabPanel Text="Basics">
                <div class="mud-table">
                    <div class="mud-table-container">
                        <table class="mud-table-root">
                            <colgroup>
                                <col style="width:50px"/>
                                <col />
                                <col style="width:50px"/>
                            </colgroup>
                            <tbody class="mud-table-body">
                                <tr class="mud-table-row">
                                    <td colspan="3">
                                        <MudText Align="Align.Center">HP</MudText>
                                    </td>
                                </tr>
                                <tr class="mud-table-row">
                                    <td>
                                        <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => Increment("HP", false, Item.Creature.MaxHP, Item.Character?.DeathThreshold ?? 0))"/>
                                    </td>
                                    <td>
                                        <HealthEdit Item="Item" GMView="false" TextSize="Typo.h6" />
                                    </td>
                                    <td class="d-flex justify-end">
                                        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" Variant="Variant.Filled" OnClick="@(() => Increment("HP", true, Item.Creature.MaxHP))"/>
                                    </td>
                                </tr>
                                <tr class="mud-table-row">
                                    <td colspan="3">
                                        <MudDivider Class="my-2"/>
                                    </td>
                                </tr>
                                <tr class="mud-table-row">
                                    <td colspan="3">
                                        <MudText Align="Align.Center">Temp HP</MudText>
                                    </td>
                                </tr>
                                <tr class="mud-table-row">
                                    <td>
                                        <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => Item.TempHP--)"/>
                                    </td>
                                    <td>
                                        <MudText Align="Align.Center" Typo="Typo.h4">@Item.TempHP</MudText>
                                    </td>
                                    <td class="d-flex justify-end">
                                        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" Variant="Variant.Filled" OnClick="@(() => Item.TempHP++)"/>
                                    </td>
                                </tr>
                                <tr class="mud-table-row">
                                    <td colspan="3">
                                        <MudDivider Class="my-2"/>
                                    </td>
                                </tr>
                                @if(Item.Character!.MaxMana > 0)
                                {
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudText Align="Align.Center">Mana</MudText>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td>
                                            <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => Increment("Mana", false, Item.Creature.MaxMana))"/>
                                        </td>
                                        <td>
                                            <PointBar Value="@Item.CurrentMana" Max="@Item.Character.MaxMana" Color="Color.Info"/>
                                        </td>
                                        <td class="d-flex justify-end">
                                            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" Variant="Variant.Filled" OnClick="@(() => Increment("Mana", true, Item.Creature.MaxMana))"/>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudDivider Class="my-2"/>
                                        </td>
                                    </tr>
                                }
                                @if(Item.Character!.MaxStamina > 0)
                                {
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudText Align="Align.Center">Stamina</MudText>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td>
                                            <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => Increment("Stamina", false, Item.Creature.MaxStamina))"/>
                                        </td>
                                        <td>
                                            <MudText Align="Align.Center" Typo="Typo.h4">@($"{Item.CurrentStamina} / {Item.Creature.MaxStamina}")</MudText>
                                        </td>
                                        <td class="d-flex justify-end">
                                            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" Variant="Variant.Filled" OnClick="@(() => Increment("Stamina", true, Item.Creature.MaxStamina))"/>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudDivider Class="my-2"/>
                                        </td>
                                    </tr>
                                }
                                @if (!Item.IsNPC)
                                {
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudText Align="Align.Center">Rest Points</MudText>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td>
                                            <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => Increment("RestPoints", false, Item.Character.Level + Item.Character.Might))"/>
                                        </td>
                                        <td>
                                            <PointBar Value="@Item.CurrentRestPoints" Max="@(Item.Character.Level + Item.Character.Might)" Color="Color.Warning"/>
                                        </td>
                                        <td class="d-flex justify-end">
                                            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" Variant="Variant.Filled" OnClick="@(() => Increment("RestPoints", true, Item.Character.Level + Item.Character.Might))"/>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudDivider Class="my-2"/>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudText Align="Align.Center">Grit Points</MudText>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td>
                                            <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Variant="Variant.Filled" OnClick="@(() => Increment("GritPoints", false, Item.Character.Charisma + 2))"/>
                                        </td>
                                        <td>
                                            <PointBar Value="@Item.CurrentGritPoints" Max="@(Item.Character.Charisma + 2)" />
                                        </td>
                                        <td class="d-flex justify-end">
                                            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" Variant="Variant.Filled" OnClick="@(() => Increment("GritPoints", true, Item.Character.Charisma + 2))"/>
                                        </td>
                                    </tr>
                                    <tr class="mud-table-row">
                                        <td colspan="3">
                                            <MudDivider Class="my-2"/>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </MudTabPanel>
            <MudTabPanel Text="Combat">
                <MudStack>
                    <div class="d-flex gap-4 justify-end">
                        <MudText Class="my-auto">AP</MudText>
                        <ActionPointEdit Item="Item" />
                    </div>
                    <div class="d-flex gap-4 justify-end">
                        <MudText Class="my-auto">Attack/Spell Check</MudText>
                        <MudPaper Outlined="true" Class="d-flex px-4 py-2">
                            <MudText Typo="Typo.h6">@(Item.Creature.Prime + Item.Character?.CombatMastery)</MudText>
                        </MudPaper>
                    </div>
                    <div class="d-flex gap-4 justify-end">
                        <MudText Class="my-auto">Save DC</MudText>
                        <MudPaper Outlined="true" Class="d-flex px-4 py-2">
                            <MudText Typo="Typo.h6">@(10 + Item.Creature.Prime + Item.Character?.CombatMastery)</MudText>
                        </MudPaper>
                    </div>
                    <MudText Typo="Typo.h6">Attacks</MudText>
                    <MudDivider />
                    @if(!Item.IsNPC)
                    {
                        <div class="mud-table">
                            <div class="mud-table-container">
                                <table class="mud-table-root">
                                    <colgroup>
                                        <col />
                                        <col style="width:20%"/>
                                        <col style="width:20%"/>
                                    </colgroup>
                                    <thead class="mud-table-head">
                                        <tr class="mud-table-row">
                                            <th class="mud-table-cell px-0"><MudText Typo="Typo.caption">Name</MudText></th>
                                            <th class="mud-table-cell px-0"><MudText Typo="Typo.caption" Class="d-flex justify-center">Dmg</MudText></th>
                                            <th class="mud-table-cell px-0"><MudText Typo="Typo.caption" Class="d-flex justify-center">Equip</MudText></th>
                                        </tr>
                                    </thead>
                                    <tbody class="mud-table-body">
                                        @foreach(Weapon weapon in Item.Character!.Weapons)
                                        {
                                            <tr class="mud-table-row">
                                                <td class="px-0 mx-auto">@weapon.Name</td>
                                                <td class="px-0">
                                                    <MudText Align="Align.Center">@($"{weapon.Damage} ({weapon.DamageType.ToString().First()})")</MudText>
                                                </td>
                                                <td class="px-0 d-flex justify-center">
                                                    <MudCheckBox T="bool"/>
                                                </td>
                                            </tr>
                                            <tr class="mud-table-row">
                                                <td class="mud-table-cell pa-0" colspan="3">
                                                    @if(!string.IsNullOrEmpty(weapon.Style.Effect))
                                                    {
                                                        <MudChip T="string">@($"{weapon.Style.Name}: {weapon.Style.Effect}")</MudChip>
                                                    }
                                                    @foreach(WeaponProperty property in weapon.WeaponProperties)
                                                    {
                                                        @if(!string.IsNullOrEmpty(property.Effects))
                                                        {
                                                            <MudChip T="string">@($"{property.Name}: {property.Effects}")</MudChip>
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                </MudStack>
            </MudTabPanel>
        </MudTabs>
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public EncounterItem Item { get; set; }
    [Parameter] public EventCallback CardClosed { get; set; }
    bool equipped { get; set; }
    
    private void Increment(string property, bool increase, int max, int min = 0)
    {
        int current = Helpers.GetPropertyByName<int>(Item, $"Current{property}");
        if (increase && current < max)
        {
            Helpers.SetProperty<int>(Item, $"Current{property}", ++current);
        } 
        else if (!increase && current > min)
        {
            Helpers.SetProperty<int>(Item, $"Current{property}", --current);
        }
    }
}