<MudCard Style="height: 70vh; width: 90vw"> 
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Secondary" Size="Size.Large">
                <MudImage Src="@("images/" + Item.Creature.ImageSrc)" />
            </MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Item.Creature.Name</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Default" OnClick="() => CardClosed.InvokeAsync()" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent Class="overflow-scroll">
        <MudSelect @bind-Value="selectedTab" Typo="Typo.h6" Class="mb-3">
            @foreach (var tab in tabs)
            {
                <MudSelectItem Value="tab">@tab</MudSelectItem>
            }
        </MudSelect>
        @if (selectedTab == tabs[0])
        {
            <BasicsTab Item="Item" />
        }
        @if (selectedTab == tabs[1])
        {
            <CombatTab Item="Item" />
        }
        @if (selectedTab == tabs[2])
        {
           <SkillsTab Item="Item" />
        }
        @if (selectedTab == tabs[3])
        {
            <SpellsTab Item="Item" />
        }
        @if (selectedTab == tabs[4])
        {
            <ActionsTab />
        }
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public EncounterItem Item { get; set; }
    [Parameter] public EventCallback CardClosed { get; set; }
    private bool equipped { get; set; }
    private string selectedTab { get; set; } = tabs[0];
    private static string[] tabs = new string[] { "Basics", "Combat", "Skills", "Spells", "Actions" };
}