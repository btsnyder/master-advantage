<div class="d-flex flex-grow-1 mt-2">
    <PropertyDisplay Title="Attack/Spell" Value="@((Item.Creature.Prime + Item.Character?.CombatMastery).ToString())" />
    <PropertyDisplay Title="Save DC" Value="@((10 + Item.Creature.Prime + Item.Character?.CombatMastery).ToString())" />
    <PropertyDisplay Title="Speed" Value="@(Item.Creature.Speed.ToString())" Editable ValueChanged="@((b) => ValueChanged("Speed", b))"/>
    @if (Item.Character != null)
    {
        <PropertyDisplay Title="Martial Check" Value="@(Math.Max(Item.Character.Athletics, Item.Character.Acrobatics).ToString())" />
        <div class="flex-1">
            <MudText Align="Align.Center" Typo="Typo.h4">Stamina</MudText>
            <MudPaper Outlined="true" Class="d-flex ms-2">
                <div class="d-flex flex-column">
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowUp" OnClick="@(() => Item.CurrentStamina++)" />
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowDown" OnClick="@(() => Item.CurrentStamina--)" />
                </div>
                <MudText Align="Align.Center" Typo="Typo.h4" Class="my-2 mx-auto">@(string.Format("{0}/{1}", Item.CurrentStamina, Item.Character.MaxStamina))</MudText>
                <div class="d-flex flex-column">
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowUp" OnClick="@(() => Item.Creature.MaxStamina++)" />
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowDown" OnClick="@(() => Item.Creature.MaxStamina--)" />
                </div>
            </MudPaper>
        </div>
        <div class="flex-1">
            <MudText Align="Align.Center" Typo="Typo.h4">Mana</MudText>
            <MudPaper Outlined="true" Class="d-flex ms-2">
                <div class="d-flex flex-column">
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowUp" OnClick="@(() => Item.CurrentMana++)" />
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowDown" OnClick="@(() => Item.CurrentMana--)" />
                </div>
                <MudText Align="Align.Center" Typo="Typo.h4" Class="my-2 mx-auto">@(string.Format("{0}/{1}", Item.CurrentMana, Item.Character.MaxMana))</MudText>
                <div class="d-flex flex-column">
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowUp" OnClick="@(() => Item.Creature.MaxMana++)" />
                    <MudIconButton Size="Size.Small" Class="my-auto ms-1" Variant="Variant.Text" Icon="@Icons.Material.Filled.KeyboardArrowDown" OnClick="@(() => Item.Creature.MaxMana--)" />
                </div>
            </MudPaper>
        </div>
    }
</div>

@code {
    [Parameter] public EncounterItem Item { get; set; }

    public void ValueChanged(string name, bool increased)
    {
        int current = Helpers.GetPropertyByName<int>(Item.Creature, name);
        current += increased ? 1 : -1;
        Helpers.SetProperty(Item.Creature, name, current);
    }
}